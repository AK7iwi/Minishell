General: 

Leak when malloc = NULL; free before return 
error in stderr
int --> int32t / norme
protect ft_strdup
protect readline ~~
Use strcmp instead of strncmp, check this fct when used 
EXIT_SUCCESS/EXIT_FAILURE logique
Handle exit code ,check exit value
Rename tube when pipe

I) Lexer: 

Review the main of tokenizer(no need to declare token in but in str_handler and special_char_handler yes)
check tokenisation file(doc)

II) Synthesis_analysis:

check parser_rules file(doc)

III) AST: 

Find the right precedence, compare with bash result

IV)ENV:

create small env for env -i

V) Exec: 

handle error in ast_exec ~~ to recheck 

	a) Prompt: OK

	b) Working History ~

	c) Builtins OK~~

		handle error, check error for builtins
		test with no env, need protect ~
		handle paramaters (if args[1]) return ;

		echo OK
		cd OK, but need better error handling 
		pwd OK
		export: ~, need to handle when no equal 
		env: OK, 
		unset OK,
		exit OK

	d) Command OK 

	e) Redirections OK

	f) Operator OK

		1) PIPE OK, to test refacto, Review the general logic, for the file(close), the order of exec, use waitpid, dup2

		2) AND and OR OK

	g)Handle environment variables 

	Handle $? Which should expand to the exit status of the most recently executed
	foreground pipeline

	h) Signals 

	Handle ctrl-C, ctrl-D and ctrl-\ which should behave like in bash.
	• In interactive mode:
	◦ ctrl-C displays a new prompt on a new line. OK
	◦ ctrl-D exits the shell. ~~ not working when line is not empty
	◦ ctrl-\ does nothing.

	i) issue with paren
		loop in ast_creator, in subsh_node, here: (*new_node)->subshell.root = ast_algo(current, 0);

VI) Tester


